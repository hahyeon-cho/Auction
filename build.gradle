plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.8'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.kcs3'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Redis 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation "com.redis.testcontainers:testcontainers-redis-junit"
    implementation 'io.lettuce:lettuce-core'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // spring Boot 애플리케이션에서 외부 API 호출
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // Mockito 의존성
    testImplementation "org.mockito:mockito-core:3.+"

    // Elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    implementation 'io.netty:netty-all:4.1.109.Final'

    testImplementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    mainClass = 'com.kcs3.auction.AuctionApplication'
}

jar {
    enabled = false
}